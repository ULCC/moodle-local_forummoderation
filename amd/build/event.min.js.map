{"version":3,"file":"event.min.js","sources":["../src/event.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * AMD module used when managing enterprise customfields.\n *\n * @module      local_forummoderation\n * @copyright   2024 Yahya (yahya@teruselearning.co.uk)\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * */\n\n\nimport $ from \"jquery\";\nimport Selectors from \"./selectors\";\nimport Services from \"./services\";\nimport CustomFormData from \"./customformdata\";\nimport Helpers from \"./helpers\";\n\nclass Event {\n    constructor(userid) {\n        this.userid = userid;\n        this.reportPostSelector = Selectors.actions.reportPost;\n        this.closeModalSelector = Selectors.actions.closeModal;\n        this.eventListeners = {};\n    }\n\n    init() {\n        new Helpers().createLinkReportModerator(this.userid);\n    }\n\n    addEvent(eventType, handler) {\n        if (!this.eventListeners[eventType]) {\n            this.eventListeners[eventType] = [];\n            document.addEventListener(eventType, (evt) => {\n                this.eventListeners[eventType].forEach((listener) => {\n                    if (listener.selectors.some(selector => evt.target.matches(selector))) {\n                        listener.handler.call(this, evt);\n                    }\n                });\n            });\n        }\n\n        this.eventListeners[eventType].push({\n            selectors: [\n                this.reportPostSelector, this.closeModalSelector\n            ], handler: handler\n        });\n    }\n\n    reportPostForum(evt) {\n        if (evt.target.closest(this.reportPostSelector)) {\n\n            evt.preventDefault();\n            const spinner = new Helpers().createSpinner(\"spinner\");\n            const parentElement = evt.target;\n            parentElement.insertAdjacentElement('afterend', spinner);\n            $(evt.target).hide();\n            $(spinner).show();\n\n            const postId = parentElement.getAttribute(\"data-post-id\");\n            const message = \"\";\n            const formData = this.prepareFormDataReport(postId, message);\n            localStorage.setItem(\"success\", true);\n            new Services($.ajax).reportPost(formData, res => {\n                const { success } = JSON.parse(res);\n                if (success) {\n                    window.location.reload();\n                }\n            });\n        }\n\n    }\n\n    prepareFormDataReport(postId, message) {\n        return new CustomFormData({\n            \"postId\": parseInt(postId),\n            \"courseId\": M.cfg.courseId,\n            \"contextId\": M.cfg.contextid,\n            \"courseContextId\": M.cfg.courseContextId,\n            \"contextInstanceId\": M.cfg.contextInstanceId,\n            \"action\": \"report-post\",\n            \"message\": message,\n            \"sesskey\": M.cfg.sesskey\n        }).toFormData();\n    }\n}\n\nexport default Event;"],"names":["constructor","userid","reportPostSelector","Selectors","actions","reportPost","closeModalSelector","closeModal","eventListeners","init","Helpers","createLinkReportModerator","this","addEvent","eventType","handler","document","addEventListener","evt","forEach","listener","selectors","some","selector","target","matches","call","push","reportPostForum","closest","preventDefault","spinner","createSpinner","parentElement","insertAdjacentElement","hide","show","postId","getAttribute","message","formData","prepareFormDataReport","localStorage","setItem","Services","$","ajax","res","success","JSON","parse","window","location","reload","CustomFormData","parseInt","M","cfg","courseId","contextid","courseContextId","contextInstanceId","sesskey","toFormData"],"mappings":";;;;;;;8UA+BIA,YAAYC,aACHA,OAASA,YACTC,mBAAqBC,mBAAUC,QAAQC,gBACvCC,mBAAqBH,mBAAUC,QAAQG,gBACvCC,eAAiB,GAG1BC,YACQC,kBAAUC,0BAA0BC,KAAKX,QAGjDY,SAASC,UAAWC,SACXH,KAAKJ,eAAeM,kBAChBN,eAAeM,WAAa,GACjCE,SAASC,iBAAiBH,WAAYI,WAC7BV,eAAeM,WAAWK,SAASC,WAChCA,SAASC,UAAUC,MAAKC,UAAYL,IAAIM,OAAOC,QAAQF,aACvDH,SAASL,QAAQW,KAAKd,KAAMM,iBAMvCV,eAAeM,WAAWa,KAAK,CAChCN,UAAW,CACPT,KAAKV,mBAAoBU,KAAKN,oBAC/BS,QAASA,UAIpBa,gBAAgBV,QACRA,IAAIM,OAAOK,QAAQjB,KAAKV,oBAAqB,CAE7CgB,IAAIY,uBACEC,SAAU,IAAIrB,kBAAUsB,cAAc,WACtCC,cAAgBf,IAAIM,OAC1BS,cAAcC,sBAAsB,WAAYH,6BAC9Cb,IAAIM,QAAQW,2BACZJ,SAASK,aAELC,OAASJ,cAAcK,aAAa,gBACpCC,QAAU,GACVC,SAAW5B,KAAK6B,sBAAsBJ,OAAQE,SACpDG,aAAaC,QAAQ,WAAW,OAC5BC,kBAASC,gBAAEC,MAAMzC,WAAWmC,UAAUO,YAChCC,QAAEA,SAAYC,KAAKC,MAAMH,KAC3BC,SACAG,OAAOC,SAASC,aAOhCZ,sBAAsBJ,OAAQE,gBACnB,IAAIe,wBAAe,QACZC,SAASlB,iBACPmB,EAAEC,IAAIC,mBACLF,EAAEC,IAAIE,0BACAH,EAAEC,IAAIG,kCACJJ,EAAEC,IAAII,yBACjB,sBACCtB,gBACAiB,EAAEC,IAAIK,UAClBC"}